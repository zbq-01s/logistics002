<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">


    <!--<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher"> -->
    <!--<property name="hashAlgorithmName" value="md5"></property> -->
    <!--<property name="hashIterations" value="2"></property> -->
    <!--<property name="storedCredentialsHexEncoded" value="true"></property> -->
    <!--</bean> -->

    <!-- 缓存管理 -->
    <!--<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"></bean> -->


    <bean id="userRealm" class="cn.tool.MyShiroRealm">
        <!--<property name="credentialsMatcher" ref="credentialsMatcher"></property> -->
    </bean>


    <!-- Shiro安全管理器 -->
    <bean id="securityManager"
          class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"></property>
        <!-- <property name="cacheManager" ref="cacheManager"></property> -->
    </bean>

    <bean id="logoutFilter"
          class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/login"/>
    </bean>

    <mvc:annotation-driven/>
    <!-- 扫描的包 -->
    <context:component-scan
            base-package="cn.service,cn.dao,cn.tool"/>

    <!--自定义的Roles Filter -->
    <bean id="anyRoles" class="cn.tool.CustomRolesAuthorizationFilter"/>


    <!-- Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 Web应用中，Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持 -->
    <bean id="shiroFilter"
          class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!--去登录的地址 -->
        <property name="loginUrl" value="/F35Index"/>
        <!--登录成功的跳转地址 -->
        <property name="successUrl" value="/sucess"/>
        <!--验证失败的跳转地址 -->
        <property name="unauthorizedUrl" value="/error"/>

        <property name="filters">
            <map>
                <entry key="logout" value-ref="logoutFilter"/>
            </map>
        </property>

        <!--定义过滤的规则 -->
        <!--复杂的系统中，url和权限都可以从数据库中读取 -->
        <!--anon是不需要验证，authc时需要验证，perms[admin]代表要admin权限 -->
        <property name="filterChainDefinitions">
            <value>

                <!--/WEB_INF/jsp/f35_index.jsp = anon &lt;!&ndash;/admins/**=anon 没有参数，表示可以匿名使用。&ndash;&gt; -->
                <!--&lt;!&ndash;/admins/user/**=authc表示需要认证(登录)才能使用，没有参数&ndash;&gt; -->
                <!--/WEB_INF/jsp/order/** = roles["业务员,系统管理员"], -->
                <!--/WEB_INF/jsp/car/** = roles["车辆管理员,系统管理员"] -->
                /logout = logout
                /dobackLogin = anon
                /quitsystem = anon
                /sign/** = anon
                /login = anon


                /F35Index = anon
                /error = anon
                /sendSms = anon
                /register = anon
                /checkMark = anon
                /checkMark2 = anon
                /loginBack = anon
                /sucess = authc
                /operation/** = anyRoles["车辆管理员,系统管理员"]
                /distribution/** = anyRoles["车辆管理员,系统管理员"]
                /car/** = anyRoles["车辆管理员,系统管理员"]
                /order/** = anyRoles["业务员,系统管理员"]
                /user/** = anyRoles["系统管理员,系统管理员"]
                /news/** = anyRoles["运营,系统管理员"]


            </value>
        </property>
    </bean>

</beans>